generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://gengsu07:Gengsu!sh3r3@10.20.254.226:5432/ppmpkm?schema=trms"
  // url      = env("DATABASE_URL")
}

model target {
  id              Int     @id @default(autoincrement())
  admin           String? @db.VarChar(255)
  nama_kpp        String? @db.VarChar(255)
  target          BigInt?
  target_internal BigInt?
  target_py       BigInt?
}

model mpn {
  admin         String?   @db.VarChar(3)
  kdmap         String?   @db.VarChar(6)
  kdbayar       String?   @db.VarChar(6)
  masa          String?   @db.VarChar(2)
  masa2         String?   @db.VarChar(2)
  tahun         String?   @db.VarChar(4)
  tanggalbayar  Int?
  bulanbayar    Int?
  tahunbayar    Int?
  datebayar     DateTime? @db.Date
  nominal       Float?    @db.Real
  ket           String?   @db.VarChar(255)
  segmentasi_wp String?   @db.VarChar(255)
  jenis_wp      String?
  nama_klu      String?
  kd_kategori   String?   @db.VarChar(5)
  nm_kategori   String?
  nm_golpok     String?
  map           String?   @db.VarChar(255)
  npwp15        String?   @db.VarChar(255)
  nama_wp       String?
  nama_ar       String?
  ntpn          String?   @db.VarChar(255)
  id            Int       @id @default(autoincrement())
}

model User {
  id            String    @id @default(uuid())
  name          String
  nip           String  @unique
  email         String?   @unique
  password      String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String   @id @default(cuid())
  userId            String   @map("user_id")
  type              String?
  provider          String
  providerAccountId String   @map("provider_account_id")
  token_type        String?
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  scope             String?
  id_token          String?  @db.Text
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String?  @map("user_id")
  sessionToken String   @unique @map("session_token") @db.Text
  accessToken  String?  @map("access_token") @db.Text
  expires      DateTime
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("sessions")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}