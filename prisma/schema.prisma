
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"] 
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")

  // url      = "postgresql://gengsu07:Gengsu!sh3r3@10.20.254.226:5432/ppmpkm?schema=trms"
  // url      = "postgresql://postgres:postgres@localhost:5432/testDB?schema=production"
}

model target {
  id              Int     @id @default(autoincrement())
  admin           String? @db.VarChar(255)
  nama_kpp        String? @db.VarChar(255)
  target          BigInt?
  target_internal BigInt?
  target_py       BigInt?
}

model mpn {
  admin         String?   @db.VarChar(3)
  kdmap         String?   @db.VarChar(6)
  kdbayar       String?   @db.VarChar(6)
  masa          String?   @db.VarChar(2)
  masa2         String?   @db.VarChar(2)
  tahun         String?   @db.VarChar(4)
  tanggalbayar  Int?
  bulanbayar    Int?
  tahunbayar    Int?
  datebayar     DateTime? @db.Date
  nominal       Float?    @db.Real
  ket           String?   @db.VarChar(255)
  segmentasi_wp String?   @db.VarChar(255)
  jenis_wp      String?
  nama_klu      String?
  kd_kategori   String?   @db.VarChar(5)
  nm_kategori   String?
  nm_golpok     String?
  map           String?   @db.VarChar(255)
  npwp15        String?   @db.VarChar(255)
  nama_wp       String?
  nama_ar       String?
  ntpn          String?   @db.VarChar(255)
  id            Int       @id @default(autoincrement())
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  username          String? @unique
  password        String  
  name            String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}